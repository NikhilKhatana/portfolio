{"version":3,"sources":["contexts/theme.js","portfolio.js","components/Navbar/Navbar.js","components/Header/Header.js","components/About/About.js","components/ProjectContainer/ProjectContainer.js","components/Projects/Projects.js","components/Skills/Skills.js","components/ScrollToTop/ScrollToTop.js","components/Contact/Contact.js","components/Footer/Footer.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","themeName","setThemeName","useEffect","darkMediaQuery","window","matchMedia","matches","addEventListener","e","Provider","value","toggleTheme","name","localStorage","setItem","header","about","role","description","resume","projects","image","stack","sourceCode","livePreview","skills","contact","Navbar","useContext","showNavList","setShowNavList","toggleNavList","className","style","display","length","href","onClick","type","Header","homepage","title","About","ProjectContainer","project","src","alt","map","item","uniqid","target","rel","Projects","id","Skills","ScrollToTop","isVisible","setIsVisible","toggleVisibility","pageYOffset","removeEventListener","fontSize","Contact","Footer","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.43467683.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst ThemeContext = createContext()\n\nconst ThemeProvider = ({ children }) => {\n  const [themeName, setThemeName] = useState('light')\n\n  useEffect(() => {\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    setThemeName(darkMediaQuery.matches ? 'dark' : 'light')\n    darkMediaQuery.addEventListener('change', (e) => {\n      setThemeName(e.matches ? 'dark' : 'light')\n    });\n  }, [])\n\n  const toggleTheme = () => {\n    const name = themeName === 'dark' ? 'light' : 'dark'\n    localStorage.setItem('themeName', name)\n    setThemeName(name)\n  }\n\n  return (\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport { ThemeProvider, ThemeContext }\n","const header = {\n  // all the properties are optional - can be left empty or deleted\n  homepage: 'https://nikhilkhatana.github.io/portfolio/',\n  title: 'NK.',\n}\n\nconst about = {\n  // all the properties are optional - can be left empty or deleted\n  name: 'Nikhil Khatana',\n  role: 'Full Stack Software Developer',\n  description: `Iâ€™m looking for new challenges and a change in my career direction. Hopefully I will get the chance to put all my knowledge in the right place\n    and become part of a great team. I strive to add a great value to the company and to guarantee happy customers.`,\n  resume:\n    'https://drive.google.com/file/d/1KbUGJTXLswWwif183LbFLHuLRLgt8WFC/view?usp=sharing',\n}\n\nconst projects = [\n  // projects can be added an removed\n  // if there are no projects, Projects section won't show up\n  {\n    name: 'React Chatbot',\n    image:\n      'https://github.com/NikhilKhatana/react-chatbot/raw/master/public/images/ChatBot.gif?raw=true',\n    description:\n      'Built a chat bot using simple-react-chatbot. Used create-react-app and React Boostrap.',\n    stack: ['React'],\n    sourceCode: 'https://github.com/NikhilKhatana/react-chatbot',\n    livePreview: 'https://react-chatbot.vercel.app/',\n  },\n  {\n    name: 'Pomotroid Timer',\n    image: 'https://s1.gifyu.com/images/pomotroid.gif',\n    description:\n      'Developed with ReactJs, React Context Hook, Typescript and Sass',\n    stack: ['React', 'TypeScript', 'SASS'],\n    sourceCode: 'https://github.com/NikhilKhatana/pomodoro-timer',\n    livePreview: 'https://pomodoro-timer-amber.vercel.app/',\n  },\n]\n\nconst skills = [\n  // skills can be added or removed\n  // if there are no skills, Skills section won't show up\n  'HTML',\n  'CSS',\n  'JavaScript',\n  'TypeScript',\n  'React',\n  'Redux',\n  'SASS',\n  'Material UI',\n  'Git',\n  'CI/CD',\n  'Jest',\n  'Enzyme',\n]\n\nconst contact = {\n  // email is optional - if left empty Contact section won't show up\n  email: 'nkhatanaa@gmail.com',\n}\n\nexport { header, about, projects, skills, contact }\n","import { useContext, useState } from 'react'\nimport Brightness2Icon from '@material-ui/icons/Brightness2'\nimport WbSunnyRoundedIcon from '@material-ui/icons/WbSunnyRounded'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { ThemeContext } from '../../contexts/theme'\nimport { projects, skills, contact } from '../../portfolio'\nimport './Navbar.css'\n\nconst Navbar = () => {\n  const [{ themeName, toggleTheme }] = useContext(ThemeContext)\n  const [showNavList, setShowNavList] = useState(false)\n\n  const toggleNavList = () => setShowNavList(!showNavList)\n\n  return (\n    <nav className='center nav'>\n      <ul\n        style={{ display: showNavList ? 'flex' : null }}\n        className='nav__list'\n      >\n        {projects.length ? (\n          <li className='nav__list-item'>\n            <a\n              href='#project'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Projects\n            </a>\n          </li>\n        ) : null}\n\n        {skills.length ? (\n          <li className='nav__list-item'>\n            <a\n              href='#skills'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Skills\n            </a>\n          </li>\n        ) : null}\n\n        {contact.email ? (\n          <li className='nav__list-item'>\n            <a\n              href='#contact'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Contact\n            </a>\n          </li>\n        ) : null}\n      </ul>\n\n      <button\n        type='button'\n        onClick={toggleTheme}\n        className='btn btn--icon nav__theme'\n        aria-label='toggle theme'\n      >\n        {themeName === 'dark' ? <WbSunnyRoundedIcon /> : <Brightness2Icon />}\n      </button>\n\n      <button\n        type='button'\n        onClick={toggleNavList}\n        className='btn btn--icon nav__hamburger'\n        aria-label='toggle navigation'\n      >\n        {showNavList ? <CloseIcon /> : <MenuIcon />}\n      </button>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import { header } from '../../portfolio'\nimport Navbar from '../Navbar/Navbar'\nimport './Header.css'\n\nconst Header = () => {\n  const { homepage, title } = header\n\n  return (\n    <header className='header center'>\n      <h3>\n        {homepage ? (\n          <a href={homepage} className='link'>\n            {title}\n          </a>\n        ) : (\n          title\n        )}\n      </h3>\n      <Navbar />\n    </header>\n  )\n}\n\nexport default Header\n","import { about } from '../../portfolio'\nimport './About.css'\n\nconst About = () => {\n  const { name, role, description, resume, social } = about\n\n  return (\n    <div className='about center'>\n      {name && (\n        <h1>\n          Hi, I am <span className='about__name'>{name}.</span>\n        </h1>\n      )}\n\n      {role && <h2 className='about__role'>{role}.</h2>}\n      <p className='about__desc'>{description && description}</p>\n\n      <div className='about__contact center'>\n        {resume && (\n          <a href={resume}>\n            <span type='button' className='btn btn--outline'>\n              Resume\n            </span>\n          </a>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default About\n","import uniqid from 'uniqid'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport './ProjectContainer.css'\n\nconst ProjectContainer = ({ project }) => (\n  // <div className='project'>\n  //   <h3>{project.name}</h3>\n\n  //   <p className='project__description'>{project.description}</p>\n  // {project.stack && (\n  //   <ul className='project__stack'>\n  //     {project.stack.map((item) => (\n  //       <li key={uniqid()} className='project__stack-item'>\n  //         {item}\n  //       </li>\n  //     ))}\n  //   </ul>\n  // )}\n\n  //   {project.sourceCode && (\n  //     <a\n  //       href={project.sourceCode}\n  //       aria-label='source code'\n  //       className='link link--icon'\n  //     >\n  //       <GitHubIcon />\n  //     </a>\n  //   )}\n\n  //   {project.livePreview && (\n  //     <a\n  //       href={project.livePreview}\n  //       aria-label='live preview'\n  //       className='link link--icon'\n  //     >\n  //       <LaunchIcon />\n  //     </a>\n  //   )}\n  // </div>\n  <div className='project-container'>\n    <img src={project.image} alt={project.name} />\n\n    <div className='project-content'>\n      <h3>{project.name}</h3>\n      <p>{project.description}</p>\n\n      {project.stack && (\n        <ul className='project-skill'>\n          {project.stack.map((item) => (\n            <li key={uniqid()}>{item}</li>\n          ))}\n        </ul>\n      )}\n\n      <ul className='project-link'>\n        <li>\n          <a\n            href={project.sourceCode}\n            aria-label='Source code'\n            target='_blank'\n            title='source code'\n            rel='noopener noreferrer'\n          >\n            <i className='icon-border fas fa-code' />\n          </a>\n        </li>\n        <li>\n          <a\n            href={project.livePreview}\n            aria-label='Preview'\n            rel='noopener noreferrer'\n            target='_blank'\n            title='preview'\n          >\n            <i\n              aria-hidden='true'\n              className='icon-border fas fa-external-link-alt'\n            />\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n)\n\nexport default ProjectContainer\n","import uniqid from 'uniqid'\nimport { projects } from '../../portfolio'\nimport ProjectContainer from '../ProjectContainer/ProjectContainer'\nimport './Projects.css'\n\nconst Projects = () => {\n  if (!projects.length) return null\n\n  return (\n    <section id='project' className='section project'>\n      <h2 className='section__title'>Projects</h2>\n\n      {projects.map((project) => (\n        <ProjectContainer key={uniqid()} project={project} />\n      ))}\n    </section>\n  )\n}\n\nexport default Projects\n","import uniqid from 'uniqid'\nimport { skills } from '../../portfolio'\nimport './Skills.css'\n\nconst Skills = () => {\n  if (!skills.length) return null\n\n  return (\n    <section id='stack' className='section stack'>\n      <h2 className='section__title'>Tech Stack</h2>\n      <div className='stack-container'>\n        <div className='tech-container'>\n          <i className='devicon-html5-plain colored' />\n          HTML\n        </div>\n        <div className='tech-container'>\n          <i className='devicon-css3-plain colored' />\n          CSS\n        </div>\n        <div className='tech-container'>\n          <i className='devicon-javascript-plain colored' />\n          JavaScript\n        </div>\n        <div className='tech-container'>\n          <i className='devicon-react-original colored' />\n          React.js\n        </div>\n        <div className='tech-container'>\n          <i className='devicon-vuejs-plain colored' />\n          Vue\n        </div>\n        <div className='tech-container'>\n          <i className='devicon-jest-plain colored' />\n          Jest\n        </div>\n        <div className='tech-container'>\n          <i className='devicon-nodejs-plain colored' />\n          Node.js\n        </div>\n        <div className='tech-container'>\n          <i className='devicon-express-original colored' />\n          Express.js\n        </div>\n        <div className='tech-container'>\n          <i className='devicon-laravel-plain colored' />\n          Laravel\n        </div>\n        <div className='tech-container'>\n          <i className='devicon-python-plain colored' />\n          Python\n        </div>\n        <div className='tech-container'>\n          <i className='devicon-django-plain colored' />\n          Django\n        </div>\n        <div className='tech-container'>\n          <i className='devicon-mongodb-plain colored' />\n          MongoDB\n        </div>\n        <div className='tech-container'>\n          <i className='devicon-postgresql-plain colored' />\n          PostgreSQL\n        </div>\n        <div className='tech-container'>\n          <i className='devicon-firebase-plain colored' />\n          Firebase\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Skills\n","import React, { useEffect, useState } from 'react'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport './ScrollToTop.css'\n\nconst ScrollToTop = () => {\n  const [isVisible, setIsVisible] = useState(false)\n\n  useEffect(() => {\n    const toggleVisibility = () =>\n      window.pageYOffset > 500 ? setIsVisible(true) : setIsVisible(false)\n\n    window.addEventListener('scroll', toggleVisibility)\n    return () => window.removeEventListener('scroll', toggleVisibility)\n  }, [])\n\n  return isVisible ? (\n    <div className='scroll-top'>\n      <a href='#top'>\n        <ArrowUpwardIcon fontSize='large' />\n      </a>\n    </div>\n  ) : null\n}\n\nexport default ScrollToTop\n","import { contact } from '../../portfolio'\nimport './Contact.css'\n\nconst Contact = () => {\n  if (!contact.email) return null\n\n  return (\n    <section className='section contact center' id='contact'>\n      <h2 className='section__title'>Get In Touch</h2>\n      <ul>\n        <li>\n          <a href='mailto:nkhatanaa@gmail.com'>\n            <span className='btn'>\n              <i aria-hidden='true' className='fas icon fa-envelope' />\n              Email\n            </span>\n          </a>\n        </li>\n\n        <li>\n          <a href='https://github.com/nikhilkhatana' aria-label='Github'>\n            <span className='btn'>\n              <i aria-hidden='true' className='fab icon fa-github' />\n              Github\n            </span>\n          </a>\n        </li>\n\n        <li>\n          <a\n            href='https://www.linkedin.com/in/nikhil-k-6b8623133/'\n            aria-label='Linkedin'\n          >\n            <span className='btn'>\n              <i aria-hidden='true' className='fab icon fa-linkedin' />\n              Linkedin\n            </span>\n          </a>\n        </li>\n      </ul>\n    </section>\n  )\n}\n\nexport default Contact\n","import './Footer.css'\n\nconst Footer = () => (\n  <footer className='footer'>\n    <small>Â© 2021 Nikhil Khatana</small>\n  </footer>\n)\n\nexport default Footer\n","import { useContext } from 'react'\nimport { ThemeContext } from './contexts/theme'\nimport Header from './components/Header/Header'\nimport About from './components/About/About'\nimport Projects from './components/Projects/Projects'\nimport Skills from './components/Skills/Skills'\nimport ScrollToTop from './components/ScrollToTop/ScrollToTop'\nimport Contact from './components/Contact/Contact'\nimport Footer from './components/Footer/Footer'\nimport './App.css'\n\nconst App = () => {\n  const [{ themeName }] = useContext(ThemeContext)\n\n  return (\n    <div id='top' className={`${themeName} app`}>\n      <Header />\n\n      <main>\n        <About />\n        <Projects />\n        <Skills />\n        <Contact />\n      </main>\n\n      <ScrollToTop />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import { render } from 'react-dom'\nimport App from './App'\nimport { ThemeProvider } from './contexts/theme'\nimport './index.css'\n\nrender(\n  <ThemeProvider>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}